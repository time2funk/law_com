<?php

namespace Plugins\NewsBundle\Repository;

use Doctrine\ORM\QueryBuilder;

use AppBundle\Repository\BaseRepository;


/**
 * ContentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends BaseRepository
{
    /* @var $news \Plugins\NewsBundle\Entity\News */

    /**
     * Find news
     *
     * @param int $limit
     * @param string $order - available ('date')
     * @param int $offset
     *
     * @return array
     */
    public function findNews($limit = 0, $order = 'public_at', $offset = 0) {
        $query = $this->createQueryBuilder('n');
        $query = $this->prepareQuery($query);

        switch ($order) {
            case 'public_at':
                $query->orderBy('n.public_at', 'DESC');
                break;
        }

        $limit = (int) $limit;
        $offset = (int) $offset;

        if ($limit > 0) {
            $query->setMaxResults(intval($limit));
        }

        if ($offset > 0) {
            $query->setFirstResult($offset);
        }

        return $query->getQuery()->getResult();
    }

    /**
     * Count news
     * @return mixed
     */
    public function countNews() {
        $query = $this->createQueryBuilder('n');
        $query->select('COUNT(n)');

        $query = $this->prepareQuery($query);

        return $query->getQuery()->getSingleScalarResult();
    }

    /**
     * Prepare query for find and count news
     *
     */
    protected function prepareQuery(QueryBuilder $query) {
        $query->where('n.public_at < :date')->setParameter('date', date('Y-m-d H:i:s'));

        return $query;
    }

    /**
     * Find short list of practic areas
     *
     * @param integer $limit
     * @return array
     */
    public function findLast($limit = 0) {
        $query = $this->createQueryBuilder('n');
        $query->where('n.public_at <= :now')
              ->setParameter('now', date('Y-m-d'));
        $query->orderBy('n.public_at', 'DESC');


        if (!empty($limit)) {
            $query->setMaxResults($limit);
        }

        return $query->getQuery()->getResult();
    }

    /**
     * Find one last news
     *
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneLast() {
        $query = $this->createQueryBuilder('n');
        $query->where('n.public_at <= :now')
            ->setParameter('now', date('Y-m-d'));
        $query->orderBy('n.public_at', 'DESC');

        $query->setMaxResults(1);

        return $query->getQuery()->getSingleResult();
    }

    // pointer
    // FUNC for NEWS SEARCH
    public function findByString($str){
      $query = $this->createQueryBuilder('n');

      $query->where(
         $query->expr()->like('n.name', ':str')
      );
      $query->orWhere('MATCH (n.name) AGAINST (:str) > 1')
       ->setParameter('str','%'.$str.'%');
       
      $query->setParameter('str','%'.$str.'%');

      return $query->getQuery()->getResult();
    }
}
